
==================== FINAL INTERFACE ====================
2018-10-29 09:28:19.4715704 UTC

interface Multilinear-0.8.0.0-4dpV53DlxV5EwwV6FZreVP:Multilinear.Index [family instance module] 8022
  interface hash: 82aa628fb1d7c7d10a12659a72bead72
  ABI hash: bdc4f33dfbfbc46388fe9f046d315e73
  export-list hash: 4645a9e87e184e91bd100d37c757003c
  orphan hash: f2be65d8de7fc30cc5a2ee3911ffc7cc
  flag hash: 734244b2d27866cfb32458af4be02956
  sig of: Nothing
  used TH splices: False
  where
exports:
  Multilinear.Index.Index{Multilinear.Index.!=! Multilinear.Index.equivI Multilinear.Index.indexName Multilinear.Index.isContravariant Multilinear.Index.isCovariant Multilinear.Index.isIndifferent Multilinear.Index.toTIndex}
  Multilinear.Index.TIndex{Multilinear.Index.Contravariant Multilinear.Index.Covariant Multilinear.Index.Indifferent indexSize tIndexName}
module dependencies:
package dependencies: Win32-2.5.4.1 aeson-1.2.4.0 array-0.5.2.0
                      attoparsec-0.13.2.2 base-4.10.1.0 base-compat-0.9.3 binary-0.8.5.1
                      bytestring-0.10.8.2 cereal-0.5.5.0 containers-0.5.10.2
                      deepseq-1.4.3.0 dlist-0.8.0.4 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.6.1 integer-gmp-1.0.1.0 integer-logarithms-1.0.2
                      primitive-0.6.3.0 random-1.1 scientific-0.3.5.2 tagged-0.8.5
                      template-haskell-2.12.0.0 text-1.2.2.2 time-1.8.0.2
                      time-locale-compat-0.1.1.3 transformers-0.5.2.0
                      unordered-containers-0.2.8.0 uuid-types-1.0.3 vector-0.12.0.1
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         hashable-1.2.6.1:Data.Hashable.Generic text-1.2.2.2:Data.Text.Lazy
         text-1.2.2.2:Data.Text binary-0.8.5.1:Data.Binary.Generic
         text-1.2.2.2:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: aeson-1.2.4.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray tagged-0.8.5:Data.Tagged
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2:Data.Text text-1.2.2.2:Data.Text.Lazy
                         unordered-containers-0.2.8.0:Data.HashMap.Base
                         unordered-containers-0.2.8.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.2.4.0:Data.Aeson cab300936442a7a2fe880eb82222bfaf
import  -/  aeson-1.2.4.0:Data.Aeson.Types.FromJSON 7061bc84ea4c272c72bda2a56b2f5048
import  -/  aeson-1.2.4.0:Data.Aeson.Types.ToJSON 56ae5e99b92e328d41b25663e0c446a3
import  -/  base-4.10.1.0:GHC.Base 8f949d675e49677c272f02ab7a85fe18
import  -/  base-4.10.1.0:GHC.Generics 7f7baa7798c80986bd27b4a04a45ba88
import  -/  base-4.10.1.0:GHC.Show 927ef590f679632bf94869e8018e5b48
import  -/  base-4.10.1.0:Prelude a93a9400cc0c816c2ee5f39399baa7a0
import  -/  cereal-0.5.5.0:Data.Serialize f70ff631324190008ca0c94a4bb1a7d9
import  -/  deepseq-1.4.3.0:Control.DeepSeq 73f0c395dfad5422d021d16f9a5d4a09
import  -/  ghc-prim-0.5.1.1:GHC.Classes 64ad5910d03ab188ab9b4adef7487b1e
import  -/  hashable-1.2.6.1:Data.Hashable a8db881b837ab6886c4f2235d9b51828
import  -/  hashable-1.2.6.1:Data.Hashable.Class 978eac2fdffbdd35f13e37f87f148743
fixities infixl 2 !=!
bfe189c5306d7d965fc93be33e0c41a9
  $dm!=! :: Multilinear.Index.Index i => i -> i -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLLC(C(S))LL),1*U(A,A,A,A,1*C1(C1(U)),A,A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                (\ @ i
                   ($dIndex :: Multilinear.Index.Index i)
                   (i1 :: i)
                   (i2 :: i) ->
                 Multilinear.Index.equivI @ i $dIndex i1 i2) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fEqTIndex :: GHC.Classes.Eq Multilinear.Index.TIndex
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Multilinear.Index.TIndex
                  Multilinear.Index.$fEqTIndex_$c==
                  Multilinear.Index.$fEqTIndex_$c/= -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fEqTIndex_$c/= ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Multilinear.Index.TIndex)
                   (b :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$fEqTIndex_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fEqTIndex_$c== ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Multilinear.Index.TIndex)
                   (ds1 :: Multilinear.Index.TIndex) ->
                 case ds of wild {
                   Multilinear.Index.Covariant a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Multilinear.Index.Covariant b1 b2
                        -> case a1 of wild2 {
                             GHC.Base.Nothing
                             -> case b1 of wild3 {
                                  GHC.Base.Nothing -> GHC.Base.eqString a2 b2
                                  GHC.Base.Just ipv -> GHC.Types.False }
                             GHC.Base.Just a4
                             -> case b1 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just b4
                                  -> case a4 of wild4 { GHC.Types.I# x ->
                                     case b4 of wild5 { GHC.Types.I# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==# x y) of wild6 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True -> GHC.Base.eqString a2 b2 } } } } } }
                   Multilinear.Index.Contravariant a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Multilinear.Index.Contravariant b1 b2
                        -> case a1 of wild2 {
                             GHC.Base.Nothing
                             -> case b1 of wild3 {
                                  GHC.Base.Nothing -> GHC.Base.eqString a2 b2
                                  GHC.Base.Just ipv -> GHC.Types.False }
                             GHC.Base.Just a4
                             -> case b1 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just b4
                                  -> case a4 of wild4 { GHC.Types.I# x ->
                                     case b4 of wild5 { GHC.Types.I# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==# x y) of wild6 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True -> GHC.Base.eqString a2 b2 } } } } } }
                   Multilinear.Index.Indifferent a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Multilinear.Index.Indifferent b1 b2
                        -> case a1 of wild2 {
                             GHC.Base.Nothing
                             -> case b1 of wild3 {
                                  GHC.Base.Nothing -> GHC.Base.eqString a2 b2
                                  GHC.Base.Just ipv -> GHC.Types.False }
                             GHC.Base.Just a4
                             -> case b1 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just b4
                                  -> case a4 of wild4 { GHC.Types.I# x ->
                                     case b4 of wild5 { GHC.Types.I# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.==# x y) of wild6 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True -> GHC.Base.eqString a2 b2 } } } } } } }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fFromJSONTIndex ::
    Data.Aeson.Types.FromJSON.FromJSON Multilinear.Index.TIndex
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Multilinear.Index.TIndex
                  Multilinear.Index.$fFromJSONTIndex_$cparseJSON
                  Multilinear.Index.$fFromJSONTIndex_$cparseJSONList -}
828b45c231060386e0f1e6c9abad4f57
  $fFromJSONTIndex1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
6ee6b87691d5ac8f2338ee2eef8032f0
  $fFromJSONTIndex10 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "indexSize")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "tIndexName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Base.String))
            a)
  {- Arity: 4, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,A><L,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object) ->
                 Multilinear.Index.$w$dFromTaggedObject' @ a w w1 w3) -}
ddfed82bd10a501547dcba8eb2730933
  $fFromJSONTIndex11 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a2
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a2)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [GHC.Types.Char]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Multilinear.Index.$fFromJSONTIndex_$s$fFromJSON[]
                   @ a2
                   w3) -}
db31314546f2a65518d17de9482acdbe
  $fFromJSONTIndex12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Multilinear.Index.$fFromJSONTIndex13) -}
ebdc2da90581e6c85d5e4e54ca0d1557
  $fFromJSONTIndex13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("tIndexName"#) -}
3f957129a95221a151268064c0315ccf
  $fFromJSONTIndex14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Multilinear.Index.$fFromJSONTIndex15) -}
6d7e5eaabea85e99babd84858b5b41be
  $fFromJSONTIndex15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("indexSize"#) -}
0116f68f8aea990a0127e0468b467296
  $fFromJSONTIndex16 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarityM1_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "indexSize")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tIndexName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                   @ ('GHC.Generics.MetaCons
                        "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   Multilinear.Index.$fFromJSONTIndex10
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))
                   Multilinear.Index.$fFromJSONTIndex_$s$fConstructorMetaMetaCons1) -}
73cb7aababf193be99cfaaa9791692a7
  $fFromJSONTIndex17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Multilinear.Index.$fFromJSONTIndex18) -}
db550ca0ee79bfa783c11d4e88fcc539
  $fFromJSONTIndex18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Contravariant"#) -}
4ba57ba52fad146af0c56b617554d12f
  $fFromJSONTIndex19 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarityM1_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "indexSize")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tIndexName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                   @ ('GHC.Generics.MetaCons
                        "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   Multilinear.Index.$fFromJSONTIndex10
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))
                   Multilinear.Index.$fFromJSONTIndex_$s$fConstructorMetaMetaCons2) -}
34fae73a0ba0d4d16a602dd651118947
  $fFromJSONTIndex2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
cab967bf85e6d5b151b8caf479f714e5
  $fFromJSONTIndex20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Multilinear.Index.$fFromJSONTIndex21) -}
998c0cbb6b87cef32066e427d4668d5c
  $fFromJSONTIndex21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Covariant"#) -}
5c20ba32d5498173f84f7283c170ab92
  $fFromJSONTIndex22 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "indexSize")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)))
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "indexSize")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "indexSize")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "tIndexName")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Base.String)))
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "indexSize")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "tIndexName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)))
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "indexSize")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "tIndexName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "indexSize")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "tIndexName")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Base.String)))
                   Multilinear.Index.$fFromJSONTIndex34
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))>_N))
                   Multilinear.Index.$fFromJSONTIndex23
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Indifferent"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.True)
                                                 (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "indexSize")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0
                                                       (GHC.Base.Maybe GHC.Types.Int))
                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Base.Just
                                                                           "tIndexName")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        GHC.Base.String))>_N))) -}
f21e5beb7bb76755877ecf6439a9018c
  $fFromJSONTIndex23 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "indexSize")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)))
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "indexSize")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)))
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "indexSize")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "tIndexName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "indexSize")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "tIndexName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)))
                   Multilinear.Index.$fFromJSONTIndex33
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))>_N))
                   Multilinear.Index.$fFromJSONTIndex24
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))>_N))) -}
f0faff96d1cb5385d7f8a315d60db330
  $fFromJSONTIndex24 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarityM1_$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "indexSize")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tIndexName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                   Multilinear.Index.$fFromJSONTIndex_$s$fConstructorMetaMetaCons
                   Multilinear.Index.$fFromJSONTIndex28
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))
                   Multilinear.Index.$fFromJSONTIndex25
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))) -}
95f95fe0d3cb94ddc21589ecf31eb15a
  $fFromJSONTIndex25 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "indexSize")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "tIndexName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Base.String))
            a)
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fConsFromJSONarityf_$cconsParseJSON
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "indexSize")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tIndexName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                   @ Data.Aeson.Types.Generic.True
                   @ Data.Aeson.Types.Generic.Zero
                   Multilinear.Index.$fFromJSONTIndex27
                     `cast`
                   (Sym (Data.Aeson.Types.Generic.N:IsRecord[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N
                             <Data.Aeson.Types.Generic.True>_N))
                   Multilinear.Index.$fFromJSONTIndex26
                     `cast`
                   (Trans
                        (forall (a :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a>_R
                         ->_R <GHC.Base.Maybe Data.Text.Internal.Text>_R
                         ->_R <Data.Aeson.Types.Internal.Value>_R
                         ->_R Sym (Data.Tagged.N:Tagged[0]
                                       <*>_N
                                       <Data.Aeson.Types.Generic.True>_P
                                       <Data.Aeson.Types.Internal.Parser
                                          ((GHC.Generics.:*:)
                                             (GHC.Generics.S1
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "indexSize")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                                             (GHC.Generics.S1
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "tIndexName")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.Rec0 GHC.Base.String))
                                             a)>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON'[0]
                                  <*>_N
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "indexSize")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tIndexName")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String)>_N
                                  <Data.Aeson.Types.Generic.True>_N)))) -}
755da5ba1c8f85ed2f4524751900fd84
  $fFromJSONTIndex26 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "indexSize")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "tIndexName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Base.String))
            a)
  {- Arity: 4, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,A><S,1*U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Multilinear.Index.$w$dConsFromJSON' @ a w w1 w3) -}
627ac7d5226957bea77d07c782a50559
  $fFromJSONTIndex27 ::
    (GHC.Generics.:*:)
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "indexSize")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "tIndexName")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String))
      a
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (ds :: (GHC.Generics.:*:)
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "indexSize")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tIndexName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String))
                            a) ->
                 GHC.Types.False) -}
8207760af0948d0430384c34f267d321
  $fFromJSONTIndex28 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "indexSize")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "tIndexName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Base.String))
            a1)
  {- Arity: 2,
     Unfolding: (Data.Aeson.Types.FromJSON.$fGFromJSONarity:*:_$cgParseJSON
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.S
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "indexSize")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                   @ (GHC.Generics.M1
                        GHC.Generics.S
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "tIndexName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 GHC.Base.String))
                   Multilinear.Index.$fFromJSONTIndex32
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromProduct[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1
                                   GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))>_N))
                   Multilinear.Index.$fFromJSONTIndex29
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromProduct[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tIndexName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)>_N))
                   Data.Aeson.Types.Generic.$fProductSizeM2
                     `cast`
                   (Trans
                        (Sym (Data.Aeson.Types.Generic.N:Tagged2[0]
                                  <GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "indexSize")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))>_P
                                  <GHC.Types.Int>_R))
                        (Sym (Data.Aeson.Types.Generic.N:ProductSize[0]
                                  <GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "indexSize")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1
                                        GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))>_N)))
                   Data.Aeson.Types.Generic.$fProductSizeM2
                     `cast`
                   (Trans
                        (Sym (Data.Aeson.Types.Generic.N:Tagged2[0]
                                  <GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tIndexName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)>_P
                                  <GHC.Types.Int>_R))
                        (Sym (Data.Aeson.Types.Generic.N:ProductSize[0]
                                  <GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tIndexName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)>_N)))) -}
5331b414c2bb7675436f51f0497db53d
  $fFromJSONTIndex29 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Array
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "tIndexName")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
            a1)
  {- Arity: 5, Strictness: <L,A><L,A><L,1*U(U,A,U)><L,1*U(U)><L,A>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Array)
                   (w3 :: GHC.Types.Int)
                   (w4 :: GHC.Types.Int) ->
                 Multilinear.Index.$w$dFromProduct @ a1 w2 w3) -}
29b6f1582ac7452a7385c9afb5380f73
  $fFromJSONTIndex3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
c28a5ad9151fc481eeebd399aca1bfef
  $fFromJSONTIndex30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Multilinear.Index.$fFromJSONTIndex31) -}
59759d85401fb456dd1911f184dc5afb
  $fFromJSONTIndex31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("String"#) -}
3f03e60aec44441f6d5d5bb3a707c118
  $fFromJSONTIndex32 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Array
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "indexSize")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
            a1)
  {- Arity: 5, Strictness: <L,A><L,A><L,1*U(U,A,U)><L,1*U(U)><L,A>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Array)
                   (w3 :: GHC.Types.Int)
                   (w4 :: GHC.Types.Int) ->
                 Multilinear.Index.$w$dFromProduct1 @ a1 w2 w3) -}
ed765345790e33cb998d56f86c9c344f
  $fFromJSONTIndex33 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarityM1_$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "indexSize")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tIndexName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                   Multilinear.Index.$fFromJSONTIndex_$s$fConstructorMetaMetaCons1
                   Multilinear.Index.$fFromJSONTIndex28
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))
                   Multilinear.Index.$fFromJSONTIndex25
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))) -}
7dd6f9b9cec541d93cd57a8b194bbe7f
  $fFromJSONTIndex34 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarityM1_$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "indexSize")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tIndexName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                   Multilinear.Index.$fFromJSONTIndex_$s$fConstructorMetaMetaCons2
                   Multilinear.Index.$fFromJSONTIndex28
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))
                   Multilinear.Index.$fFromJSONTIndex25
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))) -}
5a5407563e380414a7885bb050801719
  $fFromJSONTIndex4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a2
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String)))
            a2)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U,U)><L,U><L,1*U> -}
2761138204db885f01003e7f14c8fbac
  $fFromJSONTIndex5 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "indexSize")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)))
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "indexSize")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "indexSize")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "tIndexName")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Base.String)))
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "indexSize")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "tIndexName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)))
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "indexSize")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "tIndexName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "indexSize")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "tIndexName")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Base.String)))
                   Multilinear.Index.$fFromJSONTIndex19
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))>_N))
                   Multilinear.Index.$fFromJSONTIndex6
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Indifferent"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.True)
                                                 (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "indexSize")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0
                                                       (GHC.Base.Maybe GHC.Types.Int))
                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Base.Just
                                                                           "tIndexName")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        GHC.Base.String))>_N))) -}
564ffb97c515acff5505169c8a80458a
  $fFromJSONTIndex6 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "indexSize")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)))
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.S1
                     ('GHC.Generics.MetaSel
                        ('GHC.Base.Just "indexSize")
                        'GHC.Generics.NoSourceUnpackedness
                        'GHC.Generics.NoSourceStrictness
                        'GHC.Generics.DecidedLazy)
                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                   GHC.Generics.:*: GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)))
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "indexSize")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "tIndexName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)))
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "indexSize")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "tIndexName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)))
                   Multilinear.Index.$fFromJSONTIndex16
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))>_N))
                   Multilinear.Index.$fFromJSONTIndex7
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))>_N))) -}
3d019e6f143bab065b4c1f53d3afc52a
  $fFromJSONTIndex7 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarityM1_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "indexSize")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tIndexName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                   @ ('GHC.Generics.MetaCons
                        "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   Multilinear.Index.$fFromJSONTIndex10
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))
                   Multilinear.Index.$fFromJSONTIndex_$s$fConstructorMetaMetaCons) -}
61ceaed1e1cded1311b50f5438f2e302
  $fFromJSONTIndex8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Multilinear.Index.$fFromJSONTIndex9) -}
f6e2afc812b1c28ac2696c57d18cc11b
  $fFromJSONTIndex9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Indifferent"#) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fFromJSONTIndex_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Multilinear.Index.TIndex
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:+:)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String)))
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Indifferent"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.True)
                                                 (GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "indexSize")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0
                                                       (GHC.Base.Maybe GHC.Types.Int))
                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Base.Just
                                                                           "tIndexName")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.NoSourceStrictness
                                                                        'GHC.Generics.DecidedLazy)
                                                                     (GHC.Generics.Rec0
                                                                        GHC.Base.String)))
                             GHC.Types.Any)
                   = Multilinear.Index.$fFromJSONTIndex_g x
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             Multilinear.Index.TIndex f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:+:)
                          (GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)))
                          (GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                           GHC.Generics.:+: GHC.Generics.C1
                                              ('GHC.Generics.MetaCons
                                                 "Indifferent"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.True)
                                              (GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "indexSize")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                               GHC.Generics.:*: GHC.Generics.S1
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "tIndexName")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.Rec0
                                                                     GHC.Base.String)))
                          GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: (GHC.Generics.:+:)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "indexSize")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "tIndexName")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Base.String)))
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "indexSize")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "tIndexName")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Base.String))
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Indifferent"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.True)
                                                    (GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "indexSize")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0
                                                          (GHC.Base.Maybe GHC.Types.Int))
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        ('GHC.Generics.MetaSel
                                                                           ('GHC.Base.Just
                                                                              "tIndexName")
                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                           'GHC.Generics.NoSourceStrictness
                                                                           'GHC.Generics.DecidedLazy)
                                                                        (GHC.Generics.Rec0
                                                                           GHC.Base.String)))
                                GHC.Types.Any) ->
                     ks
                       (Multilinear.Index.$fFromJSONTIndex_$cto
                          @ GHC.Types.Any
                          a3
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:M1[0]
                                         <*>_N
                                         <GHC.Generics.D>_P
                                         <'GHC.Generics.MetaData
                                            "TIndex"
                                            "Multilinear.Index"
                                            "Multilinear-0.8.0.0-4dpV53DlxV5EwwV6FZreVP"
                                            'GHC.Types.False>_P
                                         <GHC.Generics.C1
                                            ('GHC.Generics.MetaCons
                                               "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                            (GHC.Generics.S1
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "indexSize")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                             GHC.Generics.:*: GHC.Generics.S1
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "tIndexName")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.Rec0 GHC.Base.String))
                                          GHC.Generics.:+: (GHC.Generics.C1
                                                              ('GHC.Generics.MetaCons
                                                                 "Contravariant"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.True)
                                                              (GHC.Generics.S1
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "indexSize")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.Rec0
                                                                    (GHC.Base.Maybe GHC.Types.Int))
                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "tIndexName")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.Rec0
                                                                                     GHC.Base.String))
                                                            GHC.Generics.:+: GHC.Generics.C1
                                                                               ('GHC.Generics.MetaCons
                                                                                  "Indifferent"
                                                                                  'GHC.Generics.PrefixI
                                                                                  'GHC.Types.True)
                                                                               (GHC.Generics.S1
                                                                                  ('GHC.Generics.MetaSel
                                                                                     ('GHC.Base.Just
                                                                                        "indexSize")
                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                     'GHC.Generics.DecidedLazy)
                                                                                  (GHC.Generics.Rec0
                                                                                     (GHC.Base.Maybe
                                                                                        GHC.Types.Int))
                                                                                GHC.Generics.:*: GHC.Generics.S1
                                                                                                   ('GHC.Generics.MetaSel
                                                                                                      ('GHC.Base.Just
                                                                                                         "tIndexName")
                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                   (GHC.Generics.Rec0
                                                                                                      GHC.Base.String)))>_R))
                               (Sub (Sym (Multilinear.Index.Rep_TIndex[0]))) <GHC.Types.Any>_N))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <Multilinear.Index.TIndex>_R))) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fFromJSONTIndex_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Multilinear.Index.TIndex]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Multilinear.Index.$fFromJSONTIndex3
                            (GHC.CString.unpackAppendCString#
                               Multilinear.Index.$fFromJSONTIndex2
                               (GHC.CString.unpackAppendCString#
                                  Multilinear.Index.$fFromJSONTIndex1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Multilinear.Index.TIndex] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Multilinear.Index.TIndex]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo1 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# ww dt1) of wild2 {
                            GHC.Types.False
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo1 (GHC.Prim.+# ww 1#)) }
                            GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Multilinear.Index.$fFromJSONTIndex_go 0# ($wgo1 0#) } }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fFromJSONTIndex_$cto ::
    GHC.Generics.Rep Multilinear.Index.TIndex x
    -> Multilinear.Index.TIndex
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x
                   (ds :: GHC.Generics.Rep Multilinear.Index.TIndex x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Multilinear.Index.Rep_TIndex[0]))
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "TIndex"
                                   "Multilinear.Index"
                                   "Multilinear-0.8.0.0-4dpV53DlxV5EwwV6FZreVP"
                                   'GHC.Types.False>_P
                                <GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "indexSize")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.K1
                                         GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                    GHC.Generics.:*: GHC.Generics.M1
                                                       GHC.Generics.S
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "tIndexName")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.K1
                                                          GHC.Generics.R GHC.Base.String))
                                 GHC.Generics.:+: (GHC.Generics.M1
                                                     GHC.Generics.C
                                                     ('GHC.Generics.MetaCons
                                                        "Contravariant"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.True)
                                                     (GHC.Generics.M1
                                                        GHC.Generics.S
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "indexSize")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.K1
                                                           GHC.Generics.R
                                                           (GHC.Base.Maybe GHC.Types.Int))
                                                      GHC.Generics.:*: GHC.Generics.M1
                                                                         GHC.Generics.S
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "tIndexName")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.K1
                                                                            GHC.Generics.R
                                                                            GHC.Base.String))
                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                      GHC.Generics.C
                                                                      ('GHC.Generics.MetaCons
                                                                         "Indifferent"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.True)
                                                                      (GHC.Generics.M1
                                                                         GHC.Generics.S
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "indexSize")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.K1
                                                                            GHC.Generics.R
                                                                            (GHC.Base.Maybe
                                                                               GHC.Types.Int))
                                                                       GHC.Generics.:*: GHC.Generics.M1
                                                                                          GHC.Generics.S
                                                                                          ('GHC.Generics.MetaSel
                                                                                             ('GHC.Base.Just
                                                                                                "tIndexName")
                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                             'GHC.Generics.DecidedLazy)
                                                                                          (GHC.Generics.K1
                                                                                             GHC.Generics.R
                                                                                             GHC.Base.String)))>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R
                                                       GHC.Base.String)>_R <x>_N) of wild1 { GHC.Generics.:*: ds2 ds3 ->
                      Multilinear.Index.Covariant
                        ds2
                          `cast`
                        (Trans
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "indexSize")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1
                                     GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int)>_R <x>_N)
                             (GHC.Generics.N:K1[0]
                                  <*>_N <GHC.Generics.R>_P <GHC.Base.Maybe GHC.Types.Int>_R <x>_P))
                        ds3
                          `cast`
                        (Trans
                             (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.S>_P
                                  <'GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tIndexName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy>_P
                                  <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                             (GHC.Generics.N:K1[0]
                                  <*>_N <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "indexSize")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "tIndexName")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R <x>_N) of wild2 { GHC.Generics.:*: ds3 ds4 ->
                           Multilinear.Index.Contravariant
                             ds3
                               `cast`
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "indexSize")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int)>_R <x>_N)
                                  (GHC.Generics.N:K1[0]
                                       <*>_N
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe GHC.Types.Int>_R
                                       <x>_P))
                             ds4
                               `cast`
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "tIndexName")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                                  (GHC.Generics.N:K1[0]
                                       <*>_N <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) }
                        GHC.Generics.R1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "indexSize")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "tIndexName")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R <x>_N) of wild2 { GHC.Generics.:*: ds3 ds4 ->
                           Multilinear.Index.Indifferent
                             ds3
                               `cast`
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "indexSize")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1
                                          GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int)>_R <x>_N)
                                  (GHC.Generics.N:K1[0]
                                       <*>_N
                                       <GHC.Generics.R>_P
                                       <GHC.Base.Maybe GHC.Types.Int>_R
                                       <x>_P))
                             ds4
                               `cast`
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <*>_N
                                       <GHC.Generics.S>_P
                                       <'GHC.Generics.MetaSel
                                          ('GHC.Base.Just "tIndexName")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy>_P
                                       <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                                  (GHC.Generics.N:K1[0]
                                       <*>_N
                                       <GHC.Generics.R>_P
                                       <GHC.Base.String>_R
                                       <x>_P)) } } }) -}
d577c7be15044615b0dc0ab1a90d34e1
  $fFromJSONTIndex_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True) f1 a) ->
                   Multilinear.Index.$fFromJSONTIndex8)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True) f1 a) ->
                   GHC.Generics.Prefix)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True) f1 a) ->
                   GHC.Types.True) -}
8ae285dbd7881f089e9e3bcd507653b6
  $fFromJSONTIndex_$s$fConstructorMetaMetaCons1 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True) f1 a) ->
                   Multilinear.Index.$fFromJSONTIndex17)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True) f1 a) ->
                   GHC.Generics.Prefix)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True) f1 a) ->
                   GHC.Types.True) -}
ee4a309e4db877b7aad0815c7fd7f792
  $fFromJSONTIndex_$s$fConstructorMetaMetaCons2 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True) f1 a) ->
                   Multilinear.Index.$fFromJSONTIndex20)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True) f1 a) ->
                   GHC.Generics.Prefix)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True) f1 a) ->
                   GHC.Types.True) -}
43f30531aeae6f232fe07d61b45f98b6
  $fFromJSONTIndex_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Types.Char]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  Data.Aeson.Types.FromJSON.$fFromJSONChar_$cparseJSONList
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar) -}
c7e729d28990dfca0d4bfba8b4d697cf
  $fFromJSONTIndex_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "tIndexName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "tIndexName")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tIndexName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   Multilinear.Index.$fFromJSONTIndex12)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tIndexName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   GHC.Generics.NoSourceUnpackedness)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tIndexName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   GHC.Generics.NoSourceStrictness)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tIndexName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   GHC.Generics.DecidedLazy) -}
0cc47129b57f8d3d732f549475cce384
  $fFromJSONTIndex_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "indexSize")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "indexSize")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "indexSize")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   Multilinear.Index.$fFromJSONTIndex14)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "indexSize")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   GHC.Generics.NoSourceUnpackedness)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "indexSize")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   GHC.Generics.NoSourceStrictness)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "indexSize")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   GHC.Generics.DecidedLazy) -}
5e801cc0d4ff130c47e2e9b35a166832
  $fFromJSONTIndex_g ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String)))
            GHC.Types.Any)
  {- Unfolding: (Data.Aeson.Types.FromJSON.parseNonAllNullarySum
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                        (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "indexSize")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.NoSourceStrictness
                              'GHC.Generics.DecidedLazy)
                           (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "tIndexName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                      GHC.Generics.:+: (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                          (GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "indexSize")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                           GHC.Generics.:*: GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "tIndexName")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Base.String))
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Indifferent"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.True)
                                                           (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "indexSize")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 (GHC.Base.Maybe GHC.Types.Int))
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tIndexName")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Base.String))))
                   @ GHC.Types.Any
                   Multilinear.Index.$fFromJSONTIndex22
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Contravariant"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.True)
                                                  (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "indexSize")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe GHC.Types.Int))
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "tIndexName")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         GHC.Base.String))
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Indifferent"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.True)
                                                                   (GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "indexSize")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         (GHC.Base.Maybe
                                                                            GHC.Types.Int))
                                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                                       ('GHC.Generics.MetaSel
                                                                                          ('GHC.Base.Just
                                                                                             "tIndexName")
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.Rec0
                                                                                          GHC.Base.String)))>_N))
                   Multilinear.Index.$fFromJSONTIndex5
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Contravariant"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.True)
                                                  (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "indexSize")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe GHC.Types.Int))
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "tIndexName")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         GHC.Base.String))
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Indifferent"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.True)
                                                                   (GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "indexSize")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         (GHC.Base.Maybe
                                                                            GHC.Types.Int))
                                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                                       ('GHC.Generics.MetaSel
                                                                                          ('GHC.Base.Just
                                                                                             "tIndexName")
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.Rec0
                                                                                          GHC.Base.String)))>_N))
                   Multilinear.Index.$fFromJSONTIndex4
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromUntaggedValue[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Contravariant"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.True)
                                                  (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "indexSize")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe GHC.Types.Int))
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "tIndexName")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         GHC.Base.String))
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Indifferent"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.True)
                                                                   (GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "indexSize")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         (GHC.Base.Maybe
                                                                            GHC.Types.Int))
                                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                                       ('GHC.Generics.MetaSel
                                                                                          ('GHC.Base.Just
                                                                                             "tIndexName")
                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                          'GHC.Generics.NoSourceStrictness
                                                                                          'GHC.Generics.DecidedLazy)
                                                                                       (GHC.Generics.Rec0
                                                                                          GHC.Base.String)))>_N))
                   Data.Aeson.Types.Internal.defaultOptions
                   (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fFromJSONTIndex_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [Multilinear.Index.TIndex]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fGenericTIndex :: GHC.Generics.Generic Multilinear.Index.TIndex
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Multilinear.Index.TIndex
                  Multilinear.Index.$fGenericTIndex1
                    `cast`
                  (forall (x :: <*>_N).
                   <Multilinear.Index.TIndex>_R
                   ->_R Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "TIndex"
                                         "Multilinear.Index"
                                         "Multilinear-0.8.0.0-4dpV53DlxV5EwwV6FZreVP"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "indexSize")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1
                                               GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "tIndexName")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String))
                                       GHC.Generics.:+: (GHC.Generics.M1
                                                           GHC.Generics.C
                                                           ('GHC.Generics.MetaCons
                                                              "Contravariant"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.True)
                                                           (GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "indexSize")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 (GHC.Base.Maybe GHC.Types.Int))
                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "tIndexName")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Base.String))
                                                         GHC.Generics.:+: GHC.Generics.M1
                                                                            GHC.Generics.C
                                                                            ('GHC.Generics.MetaCons
                                                                               "Indifferent"
                                                                               'GHC.Generics.PrefixI
                                                                               'GHC.Types.True)
                                                                            (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "indexSize")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  (GHC.Base.Maybe
                                                                                     GHC.Types.Int))
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "tIndexName")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   GHC.Base.String)))>_R))
                            (Sub (Sym (Multilinear.Index.Rep_TIndex[0]))) <x>_N)
                  Multilinear.Index.$fFromJSONTIndex_$cto -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fGenericTIndex1 ::
    Multilinear.Index.TIndex
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "indexSize")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
             GHC.Generics.:*: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tIndexName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)))
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "indexSize")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
             GHC.Generics.:*: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tIndexName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x (x1 :: Multilinear.Index.TIndex) ->
                 case x1 of wild {
                   Multilinear.Index.Covariant g1 g2
                   -> GHC.Generics.L1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Indifferent"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.True)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "indexSize")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "tIndexName")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Base.String)))
                        @ x
                        (GHC.Generics.:*:
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int)))
                           @ (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tIndexName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                           @ x
                           g1
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <*>_N
                                          <GHC.Generics.R>_P
                                          <GHC.Base.Maybe GHC.Types.Int>_R
                                          <x>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "indexSize")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R
                                             (GHC.Base.Maybe GHC.Types.Int)>_R) <x>_N))
                           g2
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <*>_N <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <*>_N
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "tIndexName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                          `cast`
                        (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.C>_P
                                  <'GHC.Generics.MetaCons
                                     "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "indexSize")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                   GHC.Generics.:*: GHC.Generics.M1
                                                      GHC.Generics.S
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tIndexName")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.K1
                                                         GHC.Generics.R GHC.Base.String)>_R) <x>_N)
                   Multilinear.Index.Contravariant g1 g2
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Indifferent"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.True)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "indexSize")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "tIndexName")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Base.String)))
                        @ x
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)))
                           @ x
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                              @ x
                              g1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <*>_N
                                             <GHC.Generics.R>_P
                                             <GHC.Base.Maybe GHC.Types.Int>_R
                                             <x>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "indexSize")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe GHC.Types.Int)>_R) <x>_N))
                              g2
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <*>_N <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tIndexName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "indexSize")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "tIndexName")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R) <x>_N))
                   Multilinear.Index.Indifferent g1 g2
                   -> GHC.Generics.R1
                        @ *
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)))
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tIndexName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                           GHC.Generics.:+: GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Indifferent"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.True)
                                              (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "indexSize")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.K1
                                                    GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "tIndexName")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Base.String)))
                        @ x
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)))
                           @ x
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                              @ x
                              g1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <*>_N
                                             <GHC.Generics.R>_P
                                             <GHC.Base.Maybe GHC.Types.Int>_R
                                             <x>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "indexSize")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe GHC.Types.Int)>_R) <x>_N))
                              g2
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <*>_N <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tIndexName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "indexSize")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "tIndexName")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R) <x>_N)) }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fHashableTIndex ::
    Data.Hashable.Class.Hashable Multilinear.Index.TIndex
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Multilinear.Index.TIndex
                  Multilinear.Index.$fHashableTIndex_$chashWithSalt
                  Multilinear.Index.$fHashableTIndex_$chash -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fHashableTIndex_$chash ::
    Multilinear.Index.TIndex -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: (\ (w :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$w$chashWithSalt
                        -2578643520546668380#
                        w of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fHashableTIndex_$chashWithSalt ::
    GHC.Types.Int -> Multilinear.Index.TIndex -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,1*U>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Multilinear.Index.TIndex) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case Multilinear.Index.$w$chashWithSalt ww1 w1 of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 } }) -}
35d62dfbea5eb3dd2f2f1b4cc37e4d5c
  $fIndexTIndex :: Multilinear.Index.Index Multilinear.Index.TIndex
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Multilinear.Index.TIndex
                  Multilinear.Index.tIndexName
                  Multilinear.Index.$fIndexTIndex_$cisCovariant
                  Multilinear.Index.$fIndexTIndex_$cisContravariant
                  Multilinear.Index.$fIndexTIndex_$cisIndifferent
                  Multilinear.Index.$fIndexTIndex_$cequivI
                  Multilinear.Index.$fIndexTIndex_$cequivI
                  (GHC.Base.id @ Multilinear.Index.TIndex) -}
2ca5f97850b28329aa8afc57bc15af82
  $fIndexTIndex_$cequivI ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Multilinear.Index.TIndex)
                   (ds1 :: Multilinear.Index.TIndex) ->
                 case ds of wild {
                   Multilinear.Index.Covariant count1 ds2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Multilinear.Index.Covariant count2 ds3
                        -> case count1 of wild2 {
                             GHC.Base.Nothing
                             -> case count2 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.True
                                  GHC.Base.Just ipv -> GHC.Types.False }
                             GHC.Base.Just a1
                             -> case count2 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just b1 -> GHC.Classes.eqInt a1 b1 } } }
                   Multilinear.Index.Contravariant count1 ds2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Multilinear.Index.Contravariant count2 ds3
                        -> case count1 of wild2 {
                             GHC.Base.Nothing
                             -> case count2 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.True
                                  GHC.Base.Just ipv -> GHC.Types.False }
                             GHC.Base.Just a1
                             -> case count2 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just b1 -> GHC.Classes.eqInt a1 b1 } } }
                   Multilinear.Index.Indifferent count1 ds2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Multilinear.Index.Indifferent count2 ds3
                        -> case count1 of wild2 {
                             GHC.Base.Nothing
                             -> case count2 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.True
                                  GHC.Base.Just ipv -> GHC.Types.False }
                             GHC.Base.Just a1
                             -> case count2 of wild3 {
                                  GHC.Base.Nothing -> GHC.Types.False
                                  GHC.Base.Just b1 -> GHC.Classes.eqInt a1 b1 } } } }) -}
de0c7532758e4afc24c0fa5d7eee802f
  $fIndexTIndex_$cisContravariant ::
    Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Multilinear.Index.TIndex) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False
                   Multilinear.Index.Contravariant ds1 ds2 -> GHC.Types.True }) -}
e15929db93df22c2461e86ba271b1bf9
  $fIndexTIndex_$cisCovariant ::
    Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Multilinear.Index.TIndex) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False
                   Multilinear.Index.Covariant ds1 ds2 -> GHC.Types.True }) -}
104bf85f9b38ef3b5991c14ae72717c2
  $fIndexTIndex_$cisIndifferent ::
    Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Multilinear.Index.TIndex) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False
                   Multilinear.Index.Indifferent ds1 ds2 -> GHC.Types.True }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fNFDataTIndex :: Control.DeepSeq.NFData Multilinear.Index.TIndex
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Multilinear.Index.$fNFDataTIndex_$crnf
                  `cast`
                (Sym (Control.DeepSeq.N:NFData[0] <Multilinear.Index.TIndex>_N)) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fNFDataTIndex_$crnf :: Multilinear.Index.TIndex -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Multilinear.Index.TIndex) ->
                 case x of wild {
                   Multilinear.Index.Covariant g1 g2
                   -> case g1 of wild1 {
                        GHC.Base.Nothing -> Multilinear.Index.$fNFDataTIndex_go g2
                        GHC.Base.Just x1
                        -> case x1 of ds1 { GHC.Types.I# ipv ->
                           Multilinear.Index.$fNFDataTIndex_go g2 } }
                   Multilinear.Index.Contravariant g1 g2
                   -> case g1 of wild1 {
                        GHC.Base.Nothing -> Multilinear.Index.$fNFDataTIndex_go g2
                        GHC.Base.Just x1
                        -> case x1 of ds1 { GHC.Types.I# ipv ->
                           Multilinear.Index.$fNFDataTIndex_go g2 } }
                   Multilinear.Index.Indifferent g1 g2
                   -> case g1 of wild1 {
                        GHC.Base.Nothing -> Multilinear.Index.$fNFDataTIndex_go g2
                        GHC.Base.Just x1
                        -> case x1 of ds1 { GHC.Types.I# ipv ->
                           Multilinear.Index.$fNFDataTIndex_go g2 } } }) -}
02df24524cd6549687c5682e8c4c2a91
  $fNFDataTIndex_go :: [GHC.Types.Char] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fOrdTIndex :: GHC.Classes.Ord Multilinear.Index.TIndex
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Multilinear.Index.TIndex
                  Multilinear.Index.$fEqTIndex
                  Multilinear.Index.$fOrdTIndex_$ccompare
                  Multilinear.Index.$fOrdTIndex_$c<
                  Multilinear.Index.$fOrdTIndex_$c<=
                  Multilinear.Index.$fOrdTIndex_$c>
                  Multilinear.Index.$fOrdTIndex_$c>=
                  Multilinear.Index.$fOrdTIndex_$cmax
                  Multilinear.Index.$fOrdTIndex_$cmin -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fOrdTIndex_$c< ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Multilinear.Index.TIndex)
                   (y :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$fEqTIndex_$c== x y of wild {
                   GHC.Types.False -> Multilinear.Index.$fOrdTIndex_$c<= x y
                   GHC.Types.True -> GHC.Types.False }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fOrdTIndex_$c<= ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ind1 :: Multilinear.Index.TIndex)
                   (ind2 :: Multilinear.Index.TIndex) ->
                 let {
                   $j :: GHC.Types.Bool <join 0>
                   = case ind1 of wild {
                       Multilinear.Index.Covariant ds ds1
                       -> case ds of wild1 {
                            GHC.Base.Nothing -> GHC.Types.True
                            GHC.Base.Just ipv -> GHC.Types.False }
                       Multilinear.Index.Contravariant ds ds1
                       -> case ds of wild1 {
                            GHC.Base.Nothing -> GHC.Types.True
                            GHC.Base.Just ipv -> GHC.Types.False }
                       Multilinear.Index.Indifferent ds ds1
                       -> case ds of wild1 {
                            GHC.Base.Nothing -> GHC.Types.True
                            GHC.Base.Just ipv -> GHC.Types.False } }
                 } in
                 let {
                   $j1 :: GHC.Types.Int -> GHC.Types.Bool
                     <join 1> {- Arity: 1, Strictness: <L,1*U(U)> -}
                   = \ (a2 :: GHC.Types.Int)[OneShot] ->
                     case ind1 of wild {
                       Multilinear.Index.Covariant ds ds1
                       -> case ds of wild1 {
                            GHC.Base.Nothing -> GHC.Types.True
                            GHC.Base.Just b1
                            -> case a2 of wild2 { GHC.Types.I# x ->
                               case b1 of wild3 { GHC.Types.I# y ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x y) of wild4 {
                                 GHC.Types.False -> GHC.Types.True
                                 GHC.Types.True -> GHC.Types.False } } } }
                       Multilinear.Index.Contravariant ds ds1
                       -> case ds of wild1 {
                            GHC.Base.Nothing -> GHC.Types.True
                            GHC.Base.Just b1
                            -> case a2 of wild2 { GHC.Types.I# x ->
                               case b1 of wild3 { GHC.Types.I# y ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x y) of wild4 {
                                 GHC.Types.False -> GHC.Types.True
                                 GHC.Types.True -> GHC.Types.False } } } }
                       Multilinear.Index.Indifferent ds ds1
                       -> case ds of wild1 {
                            GHC.Base.Nothing -> GHC.Types.True
                            GHC.Base.Just b1
                            -> case a2 of wild2 { GHC.Types.I# x ->
                               case b1 of wild3 { GHC.Types.I# y ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# x y) of wild4 {
                                 GHC.Types.False -> GHC.Types.True
                                 GHC.Types.True -> GHC.Types.False } } } } }
                 } in
                 case ind2 of wild {
                   Multilinear.Index.Covariant ds ds1
                   -> case ds of wild1 {
                        GHC.Base.Nothing -> $j GHC.Base.Just a2 -> $j1 a2 }
                   Multilinear.Index.Contravariant ds ds1
                   -> case ds of wild1 {
                        GHC.Base.Nothing -> $j GHC.Base.Just a2 -> $j1 a2 }
                   Multilinear.Index.Indifferent ds ds1
                   -> case ds of wild1 {
                        GHC.Base.Nothing -> $j GHC.Base.Just a2 -> $j1 a2 } }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fOrdTIndex_$c> ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (x :: Multilinear.Index.TIndex)
                   (y :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$fEqTIndex_$c== x y of wild {
                   GHC.Types.False
                   -> case Multilinear.Index.$fOrdTIndex_$c<= x y of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False }
                   GHC.Types.True -> GHC.Types.False }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fOrdTIndex_$c>= ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (x :: Multilinear.Index.TIndex)
                   (y :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$fEqTIndex_$c== x y of wild {
                   GHC.Types.False
                   -> case Multilinear.Index.$fOrdTIndex_$c<= x y of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False }
                   GHC.Types.True -> GHC.Types.True }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fOrdTIndex_$ccompare ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (x :: Multilinear.Index.TIndex)
                   (y :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$fEqTIndex_$c== x y of wild {
                   GHC.Types.False
                   -> case Multilinear.Index.$fOrdTIndex_$c<= x y of wild1 {
                        GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.LT }
                   GHC.Types.True -> GHC.Types.EQ }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fOrdTIndex_$cmax ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> Multilinear.Index.TIndex
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Multilinear.Index.TIndex)
                   (y :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$fOrdTIndex_$c<= x y of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fOrdTIndex_$cmin ::
    Multilinear.Index.TIndex
    -> Multilinear.Index.TIndex -> Multilinear.Index.TIndex
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Multilinear.Index.TIndex)
                   (y :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$fOrdTIndex_$c<= x y of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fSerializeTIndex ::
    Data.Serialize.Serialize Multilinear.Index.TIndex
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Multilinear.Index.TIndex
                  Multilinear.Index.$fSerializeTIndex_$cput
                  Multilinear.Index.$fSerializeTIndex1
                    `cast`
                  (Sym (Data.Serialize.Get.N:Get[0] <Multilinear.Index.TIndex>_R)) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fSerializeTIndex1 ::
    Data.Serialize.Get.Input
    -> Data.Serialize.Get.Buffer
    -> Data.Serialize.Get.More
    -> GHC.Types.Int
    -> Data.Serialize.Get.Failure r
    -> Data.Serialize.Get.Success Multilinear.Index.TIndex r
    -> Data.Serialize.Get.Result r
  {- Arity: 6,
     Strictness: <S(SLSS),1*U(U,U,U,U)><L,U><L,U><L,U(U)><L,U><L,C(C1(C1(C1(C1(U)))))>,
     Inline: [0],
     Unfolding: InlineRule (6, True, False)
                (\ @ r
                   (w :: Data.Serialize.Get.Input)
                   (w1 :: Data.Serialize.Get.Buffer)
                   (w2 :: Data.Serialize.Get.More)
                   (w3 :: GHC.Types.Int)
                   (w4 :: Data.Serialize.Get.Failure r)
                   (w5 :: Data.Serialize.Get.Success Multilinear.Index.TIndex r) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Multilinear.Index.$w$cget @ r ww1 ww2 ww3 ww4 w1 w2 w3 w4 w5 }) -}
d3026866f605011066bd57d9499a9069
  $fSerializeTIndex2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "indexSize")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
          GHC.Generics.:*: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tIndexName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)))
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.S1
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "indexSize")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
          GHC.Generics.:*: GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tIndexName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)))
      GHC.Types.Any
    -> (# (), Data.ByteString.Builder.Internal.Builder #)
  {- Arity: 1, Strictness: <S,1*U> -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fSerializeTIndex_$cput ::
    Data.Serialize.Put.Putter Multilinear.Index.TIndex
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$w$cput w of ww { (#,#) ww1 ww2 ->
                 (Data.Serialize.Put.PairS @ () ww1 ww2)
                   `cast`
                 (Sym (Data.Serialize.Put.N:PutM[0]) <()>_N) }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fShowTIndex :: GHC.Show.Show Multilinear.Index.TIndex
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Multilinear.Index.TIndex
                  Multilinear.Index.$fShowTIndex_$cshowsPrec
                  Multilinear.Index.$fShowTIndex_$cshow
                  Multilinear.Index.$fShowTIndex_$cshowList -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fShowTIndex1 ::
    Multilinear.Index.TIndex -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Multilinear.Index.TIndex)
                   (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Multilinear.Index.$fShowTIndex_$cshow x))
                   s) -}
e1c6358e8c1bde697187d146df3f3895
  $fShowTIndex10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Multilinear.Index.$fShowTIndex11) -}
e6f3cca9df34033e83300185c25cdf95
  $fShowTIndex11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("]"#) -}
510a014da05402493f0a92a4e80c8861
  $fShowTIndex12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   GHC.Show.$fShowMaybe4
                   Multilinear.Index.$fShowTIndex10) -}
d67d30bb8cf9b26eb5b5116d1353ae4d
  $fShowTIndex13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (":"#) -}
6bd00ba6b7e90559878aa2129cfeb4a1
  $fShowTIndex14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("["#) -}
5c41a4c80d6d1a3c4d7c7a3d5bc84d7a
  $fShowTIndex2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Multilinear.Index.$fShowTIndex3) -}
cb945f413cbbe16ac4b8a53f00930406
  $fShowTIndex3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (")"#) -}
6311a0f930a941766becbb890ea95351
  $fShowTIndex4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   GHC.Show.$fShowMaybe4
                   Multilinear.Index.$fShowTIndex2) -}
23eae13aa68210bf2531752d941e3420
  $fShowTIndex5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("("#) -}
e173b37cbbff280e5c96b5e55f9baadf
  $fShowTIndex6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Multilinear.Index.$fShowTIndex7) -}
120d85d48024b69ceef170a1bcdd610c
  $fShowTIndex7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">"#) -}
d7fd29f14282735c265ac6e97a92c7e6
  $fShowTIndex8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   GHC.Show.$fShowMaybe4
                   Multilinear.Index.$fShowTIndex6) -}
d59aa5f172574febac130493728aba68
  $fShowTIndex9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<"#) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fShowTIndex_$cshow :: Multilinear.Index.TIndex -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Multilinear.Index.TIndex) ->
                 case ds of wild {
                   Multilinear.Index.Covariant c n
                   -> GHC.CString.unpackAppendCString#
                        Multilinear.Index.$fShowTIndex14
                        (GHC.Base.++
                           @ GHC.Types.Char
                           n
                           (GHC.CString.unpackAppendCString#
                              Multilinear.Index.$fShowTIndex13
                              (case c of wild1 {
                                 GHC.Base.Nothing -> Multilinear.Index.$fShowTIndex12
                                 GHC.Base.Just b1
                                 -> GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.$fShowMaybe1
                                      (case b1 of ww2 { GHC.Types.I# ww3 ->
                                       case GHC.Show.$wshowSignedInt
                                              11#
                                              ww3
                                              (GHC.Types.[]
                                                 @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                       GHC.Base.++
                                         @ GHC.Types.Char
                                         (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                         Multilinear.Index.$fShowTIndex10 } }) })))
                   Multilinear.Index.Contravariant c n
                   -> GHC.CString.unpackAppendCString#
                        Multilinear.Index.$fShowTIndex9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           n
                           (GHC.CString.unpackAppendCString#
                              Multilinear.Index.$fShowTIndex13
                              (case c of wild1 {
                                 GHC.Base.Nothing -> Multilinear.Index.$fShowTIndex8
                                 GHC.Base.Just b1
                                 -> GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.$fShowMaybe1
                                      (case b1 of ww2 { GHC.Types.I# ww3 ->
                                       case GHC.Show.$wshowSignedInt
                                              11#
                                              ww3
                                              (GHC.Types.[]
                                                 @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                       GHC.Base.++
                                         @ GHC.Types.Char
                                         (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                         Multilinear.Index.$fShowTIndex6 } }) })))
                   Multilinear.Index.Indifferent c n
                   -> GHC.CString.unpackAppendCString#
                        Multilinear.Index.$fShowTIndex5
                        (GHC.Base.++
                           @ GHC.Types.Char
                           n
                           (GHC.CString.unpackAppendCString#
                              Multilinear.Index.$fShowTIndex13
                              (case c of wild1 {
                                 GHC.Base.Nothing -> Multilinear.Index.$fShowTIndex4
                                 GHC.Base.Just b1
                                 -> GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.$fShowMaybe1
                                      (case b1 of ww2 { GHC.Types.I# ww3 ->
                                       case GHC.Show.$wshowSignedInt
                                              11#
                                              ww3
                                              (GHC.Types.[]
                                                 @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                       GHC.Base.++
                                         @ GHC.Types.Char
                                         (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                         Multilinear.Index.$fShowTIndex2 } }) }))) }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fShowTIndex_$cshowList ::
    [Multilinear.Index.TIndex] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Multilinear.Index.TIndex]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Multilinear.Index.TIndex
                   Multilinear.Index.$fShowTIndex1
                   ls
                   s) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fShowTIndex_$cshowsPrec ::
    GHC.Types.Int -> Multilinear.Index.TIndex -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: Multilinear.Index.TIndex)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Multilinear.Index.$fShowTIndex_$cshow x))
                   s) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fToJSONTIndex ::
    Data.Aeson.Types.ToJSON.ToJSON Multilinear.Index.TIndex
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Multilinear.Index.TIndex
                  Multilinear.Index.$fToJSONTIndex_$ctoJSON
                  Multilinear.Index.$fToJSONTIndex_$ctoEncoding
                  Multilinear.Index.$fToJSONTIndex_$ctoJSONList
                  Multilinear.Index.$fToJSONTIndex_$ctoEncodingList -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fToJSONTIndex_$ctoEncoding ::
    Multilinear.Index.TIndex -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Multilinear.Index.TIndex) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Multilinear.Index.$fToJSONTIndex_$ctoJSON x))
                  `cast`
                (<Multilinear.Index.TIndex>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fToJSONTIndex_$ctoEncodingList ::
    [Multilinear.Index.TIndex] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Multilinear.Index.TIndex
                   Multilinear.Index.$fToJSONTIndex_$ctoEncoding) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fToJSONTIndex_$ctoJSON ::
    Multilinear.Index.TIndex -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Multilinear.Index.TIndex) ->
                 case Multilinear.Index.$w$ctoJSON w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Object ww1 }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $fToJSONTIndex_$ctoJSONList ::
    [Multilinear.Index.TIndex] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Multilinear.Index.TIndex]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Multilinear.Index.TIndex
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Multilinear.Index.TIndex
                                     c
                                     Multilinear.Index.$fToJSONTIndex_$ctoJSON)
                                  n1
                                  x)))))) -}
a65c974d0ab0c19862ab67082b31763e
  $tc'C:Index :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11498905123987890474##
                   9616732351799772241##
                   Multilinear.Index.$trModule
                   Multilinear.Index.$tc'C:Index2
                   1#
                   Multilinear.Index.$tc'C:Index1) -}
32b822dce0c62699075a6e865003de4c
  $tc'C:Index1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c807e4c983f640dc695176226871a450
  $tc'C:Index2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Multilinear.Index.$tc'C:Index3) -}
eaf1f747ec7ac392c20a38d7fa8d8a97
  $tc'C:Index3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:Index"#) -}
1a0f964cd6c35bdcf3b414eec55cac60
  $tc'Contravariant :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12452161082642536673##
                   8897084956245377921##
                   Multilinear.Index.$trModule
                   Multilinear.Index.$tc'Contravariant2
                   0#
                   Multilinear.Index.$tc'Contravariant1) -}
de72571ec96fc5fb5f5ff4deea825e38
  $tc'Contravariant1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
27573aad6eb8849b53c73094a6bb6a0d
  $tc'Contravariant2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Multilinear.Index.$tc'Contravariant3) -}
6c037212aacf5ed77e76b2a53467c9c6
  $tc'Contravariant3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Contravariant"#) -}
07d517c7ee68968dc93e81b5a50e43b6
  $tc'Covariant :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   751455842831742447##
                   12214503624575878196##
                   Multilinear.Index.$trModule
                   Multilinear.Index.$tc'Covariant1
                   0#
                   Multilinear.Index.$tc'Contravariant1) -}
99f301cb8e24ff9460dd28b722cd36a2
  $tc'Covariant1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Multilinear.Index.$tc'Covariant2) -}
e57c11c8c0290f591904d583f9fae3c7
  $tc'Covariant2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Covariant"#) -}
3da98d6a6f6d5b1733c5509de09b8c56
  $tc'Indifferent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12065490227607445265##
                   18384450114632404914##
                   Multilinear.Index.$trModule
                   Multilinear.Index.$tc'Indifferent1
                   0#
                   Multilinear.Index.$tc'Contravariant1) -}
95d14f63121f6c243eb6a63d2204cc63
  $tc'Indifferent1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Multilinear.Index.$tc'Indifferent2) -}
e96b177589686a8b6fdf790273870510
  $tc'Indifferent2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Indifferent"#) -}
fb64b9d01b91b76baf84c014e131fb50
  $tcIndex :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9310636502637578821##
                   5587812328257713012##
                   Multilinear.Index.$trModule
                   Multilinear.Index.$tcIndex2
                   0#
                   Multilinear.Index.$tcIndex1) -}
f5851c6ceb8a02aea036b6ce50961b11
  $tcIndex1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c2085528c944be945b212542fb67611d
  $tcIndex2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Multilinear.Index.$tcIndex3) -}
078cc9929bb8717fdeb18f1d9e221539
  $tcIndex3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Index"#) -}
e2f2c0988ac640f4f7b9ea76a7003f12
  $tcTIndex :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8932474819660108353##
                   12865490713687771999##
                   Multilinear.Index.$trModule
                   Multilinear.Index.$tcTIndex1
                   0#
                   GHC.Types.krep$*) -}
98df0137d6e76a96848aa930834c2de1
  $tcTIndex1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Multilinear.Index.$tcTIndex2) -}
66be6bcb444b94dcfcbc801d2ff768ea
  $tcTIndex2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TIndex"#) -}
88de02bf76713f9355bc7e32aab110d6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Multilinear.Index.$trModule3
                   Multilinear.Index.$trModule1) -}
a235c20aa2ef9fe8a797d138db0d6277
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Multilinear.Index.$trModule2) -}
a53b24f8cf86258a15611bf682d4ef7e
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Multilinear.Index"#) -}
6046027d96cf9a02f3ac40296e8b5745
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Multilinear.Index.$trModule4) -}
b10101b08e43316d47e4911b67157f11
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Multilinear-0.8.0.0-4dpV53DlxV5EwwV6FZreVP"#) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $w$cget ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Serialize.Get.Buffer
    -> Data.Serialize.Get.More
    -> GHC.Types.Int
    -> Data.Serialize.Get.Failure r
    -> Data.Serialize.Get.Success Multilinear.Index.TIndex r
    -> Data.Serialize.Get.Result r
  {- Arity: 9,
     Strictness: <L,U><L,U><L,U><S,U><L,U><L,U><L,U(U)><L,U><L,C(C1(C1(C1(C1(U)))))>,
     Inline: [0] -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $w$chashWithSalt ::
    GHC.Prim.Int# -> Multilinear.Index.TIndex -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Multilinear.Index.TIndex) ->
                 case w of wild {
                   Multilinear.Index.Covariant g1 g2
                   -> case g1 of wild1 {
                        GHC.Base.Nothing
                        -> Multilinear.Index.$wgo
                             g2
                             (GHC.Prim.*# (GHC.Prim.*# ww 16777619#) 16777619#)
                             0#
                        GHC.Base.Just a1
                        -> case a1 of wild2 { GHC.Types.I# y# ->
                           Multilinear.Index.$wgo
                             g2
                             (GHC.Prim.xorI#
                                (GHC.Prim.*#
                                   (GHC.Prim.xorI#
                                      (GHC.Prim.*# (GHC.Prim.*# ww 16777619#) 16777619#)
                                      6148914691236517205#)
                                   16777619#)
                                y#)
                             0# } }
                   Multilinear.Index.Contravariant g1 g2
                   -> case g1 of wild1 {
                        GHC.Base.Nothing
                        -> Multilinear.Index.$wgo
                             g2
                             (GHC.Prim.*#
                                (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 1#)
                                16777619#)
                             0#
                        GHC.Base.Just a1
                        -> case a1 of wild2 { GHC.Types.I# y# ->
                           Multilinear.Index.$wgo
                             g2
                             (GHC.Prim.xorI#
                                (GHC.Prim.*#
                                   (GHC.Prim.xorI#
                                      (GHC.Prim.*#
                                         (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 1#)
                                         16777619#)
                                      6148914691236517205#)
                                   16777619#)
                                y#)
                             0# } }
                   Multilinear.Index.Indifferent g1 g2
                   -> case g1 of wild1 {
                        GHC.Base.Nothing
                        -> Multilinear.Index.$wgo
                             g2
                             (GHC.Prim.*#
                                (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 2#)
                                16777619#)
                             0#
                        GHC.Base.Just a1
                        -> case a1 of wild2 { GHC.Types.I# y# ->
                           Multilinear.Index.$wgo
                             g2
                             (GHC.Prim.xorI#
                                (GHC.Prim.*#
                                   (GHC.Prim.xorI#
                                      (GHC.Prim.*#
                                         (GHC.Prim.xorI# (GHC.Prim.*# ww 16777619#) 2#)
                                         16777619#)
                                      6148914691236517205#)
                                   16777619#)
                                y#)
                             0# } } }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $w$cput ::
    Multilinear.Index.TIndex
    -> (# (), Data.ByteString.Builder.Internal.Builder #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Multilinear.Index.TIndex) ->
                 case w of wild {
                   Multilinear.Index.Covariant g1 g2
                   -> let {
                        k :: Data.Serialize.Put.PutM ()
                        = case Data.Serialize.$w$cput25
                                 @ GHC.Types.Char
                                 Data.Serialize.$fSerializeChar
                                 g2 of ww { (#,#) ww1 ww2 ->
                          (Data.Serialize.Put.PairS @ () ww1 ww2)
                            `cast`
                          (Sym (Data.Serialize.Put.N:PutM[0]) <()>_N) }
                      } in
                      let {
                        f :: forall r.
                             Data.ByteString.Builder.Internal.BuildStep r
                             -> Data.ByteString.Builder.Internal.BuildStep r
                        = \ @ r ->
                          case Data.Serialize.$w$cput17
                                 @ GHC.Types.Int
                                 Data.Serialize.$fSerializeInt
                                 g1 of ww { (#,#) ww1 ww2 ->
                          ww2 `cast` (Data.ByteString.Builder.Internal.N:Builder[0]) @ r }
                      } in
                      (# case k `cast`
                              (Data.Serialize.Put.N:PutM[0] <()>_N) of wild1 { Data.Serialize.Put.PairS b2 w' ->
                         b2 },
                         (\ @ r (x :: Data.ByteString.Builder.Internal.BuildStep r) ->
                          let {
                            x1 :: Data.ByteString.Builder.Internal.BuildStep r
                            = f @ r
                                (case k `cast`
                                      (Data.Serialize.Put.N:PutM[0] <()>_N) of wild1 { Data.Serialize.Put.PairS b2 w' ->
                                 w' `cast` (Data.ByteString.Builder.Internal.N:Builder[0]) @ r x })
                          } in
                          let {
                            lvl45 :: Data.ByteString.Builder.Internal.BufferRange
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           Data.ByteString.Builder.Internal.BuildSignal r #)
                              {- Arity: 2, Strictness: <S(SL),1*U(U,U)><S,U> -}
                            = \ (ds :: Data.ByteString.Builder.Internal.BufferRange)
                                (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case ds of wild1 { Data.ByteString.Builder.Internal.BufferRange dt dt1 ->
                              case GHC.Prim.writeWord8OffAddr#
                                     @ GHC.Prim.RealWorld
                                     dt
                                     0#
                                     0##
                                     eta of s2 { DEFAULT ->
                              (x1
                                 (Data.ByteString.Builder.Internal.BufferRange
                                    (GHC.Prim.plusAddr# dt 1#)
                                    dt1))
                                `cast`
                              (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                s2 } }
                          } in
                          (\ (eta :: Data.ByteString.Builder.Internal.BufferRange)
                             (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                           case eta of wild1 { Data.ByteString.Builder.Internal.BufferRange dt dt1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# (GHC.Prim.minusAddr# dt1 dt) 1#) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.writeWord8OffAddr#
                                       @ GHC.Prim.RealWorld
                                       dt
                                       0#
                                       0##
                                       eta1 of s2 { DEFAULT ->
                                (x1
                                   (Data.ByteString.Builder.Internal.BufferRange
                                      (GHC.Prim.plusAddr# dt 1#)
                                      dt1))
                                  `cast`
                                (GHC.Types.N:IO[0]
                                     <Data.ByteString.Builder.Internal.BuildSignal r>_R)
                                  s2 }
                             GHC.Types.True
                             -> (# eta1,
                                   Data.ByteString.Builder.Internal.BufferFull
                                     @ r
                                     1#
                                     dt
                                     lvl45
                                       `cast`
                                     (<Data.ByteString.Builder.Internal.BufferRange>_R
                                      ->_R Sym (GHC.Types.N:IO[0]
                                                    <Data.ByteString.Builder.Internal.BuildSignal
                                                       r>_R)) #) } })
                            `cast`
                          (<Data.ByteString.Builder.Internal.BufferRange>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <Data.ByteString.Builder.Internal.BuildSignal r>_R)))
                           `cast`
                         (Sym (Data.ByteString.Builder.Internal.N:Builder[0])) #)
                   Multilinear.Index.Contravariant g1 g2
                   -> Multilinear.Index.$fSerializeTIndex2
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)))
                           @ GHC.Types.Any
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                              @ GHC.Types.Any
                              g1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <*>_N
                                             <GHC.Generics.R>_P
                                             <GHC.Base.Maybe GHC.Types.Int>_R
                                             <GHC.Types.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "indexSize")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe
                                                   GHC.Types.Int)>_R) <GHC.Types.Any>_N))
                              g2
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <*>_N
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Types.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tIndexName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                GHC.Base.String>_R) <GHC.Types.Any>_N)))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "indexSize")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "tIndexName")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R) <GHC.Types.Any>_N))
                   Multilinear.Index.Indifferent g1 g2
                   -> Multilinear.Index.$fSerializeTIndex2
                        (GHC.Generics.R1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)))
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tIndexName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)))
                           @ GHC.Types.Any
                           (GHC.Generics.:*:
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int)))
                              @ (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                              @ GHC.Types.Any
                              g1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <*>_N
                                             <GHC.Generics.R>_P
                                             <GHC.Base.Maybe GHC.Types.Int>_R
                                             <GHC.Types.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "indexSize")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                (GHC.Base.Maybe
                                                   GHC.Types.Int)>_R) <GHC.Types.Any>_N))
                              g2
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <*>_N
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Types.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <*>_N
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tIndexName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                GHC.Base.String>_R) <GHC.Types.Any>_N)))
                             `cast`
                           (Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Indifferent" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "indexSize")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "tIndexName")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R) <GHC.Types.Any>_N)) }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  $w$ctoJSON ::
    Multilinear.Index.TIndex -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
658124c9f8dcdb131dad340fec928d2b
  $w$dConsFromJSON' ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "indexSize")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "tIndexName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Base.String))
            a)
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 case w2 of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tIndexName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             a)
                        Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                        wild
                   Data.Aeson.Types.Internal.Object obj
                   -> let {
                        m :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "indexSize")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                  a)
                        = Data.Aeson.Types.FromJSON.$w$cparseRecord2
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "indexSize")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ GHC.Types.Int
                            @ Data.Aeson.Types.Generic.Zero
                            @ GHC.Generics.R
                            Multilinear.Index.$fFromJSONTIndex_$s$fSelectorMetaMetaSel1
                            Data.Aeson.Types.FromJSON.$fFromJSONInt
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      let {
                        e :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tIndexName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a)
                        = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "tIndexName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ Data.Aeson.Types.Generic.Zero
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            Multilinear.Index.$fFromJSONTIndex_$s$fSelectorMetaMetaSel
                            Multilinear.Index.$fFromJSONTIndex11
                              `cast`
                            (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                      <Data.Aeson.Types.Generic.Zero>_N
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            w1
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  ((GHC.Generics.:*:)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "indexSize")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "tIndexName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                     a)
                                  f4
                                  r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "indexSize")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                               a>_R)
                         @ f4
                         @ r
                         path
                         kf
                         (\ (a3 :: GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "indexSize")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                     a) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tIndexName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a>_R)
                            @ f4
                            @ r
                            path
                            kf
                            (\ (a4 :: GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "tIndexName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String)
                                        a) ->
                             ks
                               (GHC.Generics.:*:
                                  @ *
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "indexSize")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "tIndexName")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String))
                                  @ a
                                  a3
                                  a4))))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <(GHC.Generics.:*:)
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "indexSize")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String))
                                   a>_R)) }) -}
0a6ca52115fc6dfe60f21f7f12045f7c
  $w$dFromProduct ::
    Data.Aeson.Types.Internal.Array
    -> GHC.Types.Int
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "tIndexName")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
            a1)
  {- Arity: 2, Strictness: <L,1*U(U,A,U)><L,1*U(U)>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Array)
                   (w1 :: GHC.Types.Int) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                   = case w of wild { Data.Vector.Vector dt dt1 dt2 ->
                     case w1 of wild1 { GHC.Types.I# y ->
                     case GHC.Prim.indexArray#
                            @ Data.Aeson.Types.Internal.Value
                            dt2
                            (GHC.Prim.+# dt y) of ds3 { Unit# ipv ->
                     case ipv of wild2 {
                       DEFAULT
                       -> let {
                            msg20 :: GHC.Base.String
                            = GHC.CString.unpackAppendCString#
                                Data.Aeson.Types.FromJSON.typeMismatch4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Multilinear.Index.$fFromJSONTIndex30
                                   (GHC.CString.unpackAppendCString#
                                      Data.Aeson.Types.FromJSON.typeMismatch3
                                      (case wild2 of wild3 {
                                         Data.Aeson.Types.Internal.Object ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                         Data.Aeson.Types.Internal.Array ds
                                         -> Data.Aeson.Types.FromJSON.typeMismatch1
                                         Data.Aeson.Types.Internal.Number ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                         Data.Aeson.Types.Internal.Bool ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                         Data.Aeson.Types.Internal.Null
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                          } in
                          (\ @ f4 :: * -> *
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (_ks :: Data.Aeson.Types.Internal.Success
                                       GHC.Base.String f4 r)[OneShot] ->
                           kf
                             (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                             msg20)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0] <GHC.Base.String>_R))
                       Data.Aeson.Types.Internal.String txt
                       -> case txt of wild3 { Data.Text.Internal.Text dt4 dt5 dt6 ->
                          let {
                            a2 :: GHC.Base.String
                            = let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt5 dt6
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww end) of wild4 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt4 ww of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild5 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild6 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww 1#))
                                              GHC.Types.True
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (case GHC.Prim.indexWord16Array#
                                                           dt4
                                                           (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                    GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)) })
                                                   ($wunfold (GHC.Prim.+# ww 2#)) } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt5
                          } in
                          (\ @ f4 :: * -> *
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (ks :: Data.Aeson.Types.Internal.Success
                                      GHC.Base.String f4 r)[OneShot] ->
                           ks a2)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <GHC.Base.String>_R)) } } } } }
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tIndexName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                a1)
                             f5
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a3 :: [GHC.Types.Char]) ->
                     ks
                       a3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <*>_N <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <*>_N
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tIndexName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <a1>_N))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "tIndexName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                              a1>_R))) -}
6bd836fae50f105f9fa45aeba0034ad7
  $w$dFromProduct1 ::
    Data.Aeson.Types.Internal.Array
    -> GHC.Types.Int
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "indexSize")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R (GHC.Base.Maybe GHC.Types.Int))
            a1)
  {- Arity: 2, Strictness: <L,1*U(U,A,U)><L,1*U(U)>, Inline: [0] -}
7c9d9260ace04dec1f94957a3ebabb84
  $w$dFromTaggedObject' ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "indexSize")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "tIndexName")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Base.String))
            a)
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: Data.Aeson.Types.Internal.Object) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "indexSize")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                             a)
                   = Data.Aeson.Types.FromJSON.$w$cparseRecord2
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "indexSize")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ GHC.Types.Int
                       @ Data.Aeson.Types.Generic.Zero
                       @ GHC.Generics.R
                       Multilinear.Index.$fFromJSONTIndex_$s$fSelectorMetaMetaSel1
                       Data.Aeson.Types.FromJSON.$fFromJSONInt
                       @ a
                       w
                       (GHC.Base.Nothing @ Data.Text.Internal.Text)
                       w2
                 } in
                 let {
                   e :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tIndexName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "tIndexName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       Multilinear.Index.$fFromJSONTIndex_$s$fSelectorMetaMetaSel
                       Multilinear.Index.$fFromJSONTIndex11
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                       @ a
                       w
                       w1
                       (GHC.Base.Nothing @ Data.Text.Internal.Text)
                       w2
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:*:)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "indexSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                a)
                             f4
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "indexSize")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                          a>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a3 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "indexSize")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                a) ->
                     e `cast`
                     (Data.Aeson.Types.Internal.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tIndexName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a>_R)
                       @ f4
                       @ r
                       path
                       kf
                       (\ (a4 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                   a) ->
                        ks
                          (GHC.Generics.:*:
                             @ *
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "indexSize")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                             @ (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tIndexName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String))
                             @ a
                             a3
                             a4))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:*:)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "indexSize")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int)))
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "tIndexName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              a>_R))) -}
deec12d5eae11a65299a2a2981d61509
  $wgo ::
    [GHC.Types.Char] -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,U><S,U>,
     Inline: [0] -}
6e217fd4d71ad613b20e1d25714172cb
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
326f8236c1b6e130839af524932d2666
  $wouter1 ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
4ec3d376881fcc30862442be08c61ab1
  $wouter2 ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
35d62dfbea5eb3dd2f2f1b4cc37e4d5c
  class Index i where
    indexName :: i -> GHC.Base.String
    isCovariant :: i -> GHC.Types.Bool
    isContravariant :: i -> GHC.Types.Bool
    isIndifferent :: i -> GHC.Types.Bool
    equivI :: i -> i -> GHC.Types.Bool
    (!=!) :: i -> i -> GHC.Types.Bool
    toTIndex :: i -> Multilinear.Index.TIndex
    {-# MINIMAL indexName, isCovariant, isContravariant, isIndifferent,
                equivI, toTIndex #-}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  axiom Multilinear.Index.Rep_TIndex::
      GHC.Generics.Rep Multilinear.Index.TIndex
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "TIndex"
               "Multilinear.Index"
               "Multilinear-0.8.0.0-4dpV53DlxV5EwwV6FZreVP"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Covariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "indexSize")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tIndexName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Contravariant" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "indexSize")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 (GHC.Base.Maybe GHC.Types.Int))
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "tIndexName")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Indifferent"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.True)
                                                  (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "indexSize")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0
                                                        (GHC.Base.Maybe GHC.Types.Int))
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "tIndexName")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         GHC.Base.String))))
42fadcdd8a2ab4d2f4a2428bad04d8a6
  data TIndex
    = Covariant {indexSize :: GHC.Base.Maybe GHC.Types.Int,
                 tIndexName :: GHC.Base.String}
    | Contravariant {indexSize :: GHC.Base.Maybe GHC.Types.Int,
                     tIndexName :: GHC.Base.String}
    | Indifferent {indexSize :: GHC.Base.Maybe GHC.Types.Int,
                   tIndexName :: GHC.Base.String}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  indexSize ::
    Multilinear.Index.TIndex -> GHC.Base.Maybe GHC.Types.Int
  RecSel Left Multilinear.Index.TIndex
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Multilinear.Index.TIndex) ->
                 case ds of wild {
                   Multilinear.Index.Covariant ds1 ds2 -> ds1
                   Multilinear.Index.Contravariant ds1 ds2 -> ds1
                   Multilinear.Index.Indifferent ds1 ds2 -> ds1 }) -}
42fadcdd8a2ab4d2f4a2428bad04d8a6
  tIndexName :: Multilinear.Index.TIndex -> GHC.Base.String
  RecSel Left Multilinear.Index.TIndex
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Multilinear.Index.TIndex) ->
                 case ds of wild {
                   Multilinear.Index.Covariant ds1 ds2 -> ds2
                   Multilinear.Index.Contravariant ds1 ds2 -> ds2
                   Multilinear.Index.Indifferent ds1 ds2 -> ds2 }) -}
instance GHC.Classes.Eq [Multilinear.Index.TIndex]
  = Multilinear.Index.$fEqTIndex
instance Data.Aeson.Types.FromJSON.FromJSON [Multilinear.Index.TIndex]
  = Multilinear.Index.$fFromJSONTIndex
instance GHC.Generics.Generic [Multilinear.Index.TIndex]
  = Multilinear.Index.$fGenericTIndex
instance Data.Hashable.Class.Hashable [Multilinear.Index.TIndex]
  = Multilinear.Index.$fHashableTIndex
instance Multilinear.Index.Index [Multilinear.Index.TIndex]
  = Multilinear.Index.$fIndexTIndex
instance Control.DeepSeq.NFData [Multilinear.Index.TIndex]
  = Multilinear.Index.$fNFDataTIndex
instance GHC.Classes.Ord [Multilinear.Index.TIndex]
  = Multilinear.Index.$fOrdTIndex
instance Data.Serialize.Serialize [Multilinear.Index.TIndex]
  = Multilinear.Index.$fSerializeTIndex
instance GHC.Show.Show [Multilinear.Index.TIndex]
  = Multilinear.Index.$fShowTIndex
instance Data.Aeson.Types.ToJSON.ToJSON [Multilinear.Index.TIndex]
  = Multilinear.Index.$fToJSONTIndex
family instance GHC.Generics.Rep [Multilinear.Index.TIndex]
  = Multilinear.Index.Rep_TIndex
"SPEC/Multilinear.Index $fConstructorMetaMetaCons @ "Contravariant" @ 'PrefixI @ 'True" [orphan] forall (v2 :: GHC.Generics.SingI
                                                                                                                 'GHC.Types.True)
                                                                                                        (v1 :: GHC.Generics.SingI
                                                                                                                 'GHC.Generics.PrefixI)
                                                                                                        (v :: GHC.TypeLits.KnownSymbol
                                                                                                                "Contravariant")
  GHC.Generics.$fConstructorMetaMetaCons @ "Contravariant"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.True
                                         v
                                         v1
                                         v2
  = Multilinear.Index.$fFromJSONTIndex_$s$fConstructorMetaMetaCons1
"SPEC/Multilinear.Index $fConstructorMetaMetaCons @ "Covariant" @ 'PrefixI @ 'True" [orphan] forall (v2 :: GHC.Generics.SingI
                                                                                                             'GHC.Types.True)
                                                                                                    (v1 :: GHC.Generics.SingI
                                                                                                             'GHC.Generics.PrefixI)
                                                                                                    (v :: GHC.TypeLits.KnownSymbol
                                                                                                            "Covariant")
  GHC.Generics.$fConstructorMetaMetaCons @ "Covariant"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.True
                                         v
                                         v1
                                         v2
  = Multilinear.Index.$fFromJSONTIndex_$s$fConstructorMetaMetaCons2
"SPEC/Multilinear.Index $fConstructorMetaMetaCons @ "Indifferent" @ 'PrefixI @ 'True" [orphan] forall (v2 :: GHC.Generics.SingI
                                                                                                               'GHC.Types.True)
                                                                                                      (v1 :: GHC.Generics.SingI
                                                                                                               'GHC.Generics.PrefixI)
                                                                                                      (v :: GHC.TypeLits.KnownSymbol
                                                                                                              "Indifferent")
  GHC.Generics.$fConstructorMetaMetaCons @ "Indifferent"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.True
                                         v
                                         v1
                                         v2
  = Multilinear.Index.$fFromJSONTIndex_$s$fConstructorMetaMetaCons
"SPEC/Multilinear.Index $fFromJSON[] @ Char" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                                     GHC.Types.Char)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Types.Char v
  = Multilinear.Index.$fFromJSONTIndex_$s$fFromJSON[]
"SPEC/Multilinear.Index $fSelectorMetaMetaSel @ ('Just
                                                  "indexSize") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                    (v2 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                    (v1 :: GHC.Generics.SingI
                                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                    (v :: GHC.Generics.SingI
                                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                                               "indexSize"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "indexSize")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = Multilinear.Index.$fFromJSONTIndex_$s$fSelectorMetaMetaSel1
"SPEC/Multilinear.Index $fSelectorMetaMetaSel @ ('Just
                                                  "tIndexName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                     (v2 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                     (v1 :: GHC.Generics.SingI
                                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                     (v :: GHC.Generics.SingI
                                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                                "tIndexName"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "tIndexName")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = Multilinear.Index.$fFromJSONTIndex_$s$fSelectorMetaMetaSel
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

